"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/community/[id]/page",{

/***/ "(app-pages-browser)/./hooks/useCheckLikes.ts":
/*!********************************!*\
  !*** ./hooks/useCheckLikes.ts ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _store_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/store/store */ \"(app-pages-browser)/./store/store.ts\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! firebase/firestore */ \"(app-pages-browser)/./node_modules/firebase/firestore/dist/esm/index.esm.js\");\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next-auth/react */ \"(app-pages-browser)/./node_modules/next-auth/react/index.js\");\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_auth_react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _firebase__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/firebase */ \"(app-pages-browser)/./firebase.ts\");\n/* harmony import */ var _lib_converters_User__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/lib/converters/User */ \"(app-pages-browser)/./lib/converters/User.ts\");\n\n\n\n\n\n\nconst useCheckLikes = (question, comment)=>{\n    const { data: session } = (0,next_auth_react__WEBPACK_IMPORTED_MODULE_3__.useSession)();\n    const [isQuestionLiked, setIsQuestionLiked] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [isCommentLiked, setIsCommentLiked] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const setLikeQuestionCount = (0,_store_store__WEBPACK_IMPORTED_MODULE_1__.useLikeQuestionCountStore)((state)=>state.setLikeQuestionCount);\n    const setLikeCommentCount = (0,_store_store__WEBPACK_IMPORTED_MODULE_1__.useLikeCommentCountStore)((state)=>state.setLikeCommentCount);\n    const checkIfQuestionLiked = async ()=>{\n        var _session_user;\n        if (session === null || session === void 0 ? void 0 : (_session_user = session.user) === null || _session_user === void 0 ? void 0 : _session_user.id) {\n            var _docSnap_data_likedQuestions;\n            const docRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_4__.db, \"users\", session.user.id);\n            const docSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.getDoc)(docRef);\n            if (docSnap.exists() && ((_docSnap_data_likedQuestions = docSnap.data().likedQuestions) === null || _docSnap_data_likedQuestions === void 0 ? void 0 : _docSnap_data_likedQuestions.includes(question === null || question === void 0 ? void 0 : question.id))) {\n                setIsQuestionLiked(true);\n            } else {\n                setIsQuestionLiked(false);\n            }\n        }\n    };\n    const checkIfCommentLiked = async ()=>{\n        var _session_user;\n        if (session === null || session === void 0 ? void 0 : (_session_user = session.user) === null || _session_user === void 0 ? void 0 : _session_user.id) {\n            var _docSnap_data_likedComments;\n            const docRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_4__.db, \"users\", session.user.id);\n            const docSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.getDoc)(docRef);\n            if (docSnap.exists() && ((_docSnap_data_likedComments = docSnap.data().likedComments) === null || _docSnap_data_likedComments === void 0 ? void 0 : _docSnap_data_likedComments.includes(comment === null || comment === void 0 ? void 0 : comment.id))) {\n                setIsCommentLiked(true);\n            } else {\n                setIsCommentLiked(false);\n            }\n        }\n    };\n    const handleQuestionLikeCheck = async (questionId)=>{\n        var _session_user;\n        if (session === null || session === void 0 ? void 0 : (_session_user = session.user) === null || _session_user === void 0 ? void 0 : _session_user.id) {\n            var _session_user1;\n            const docRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_4__.db, \"users\", session === null || session === void 0 ? void 0 : (_session_user1 = session.user) === null || _session_user1 === void 0 ? void 0 : _session_user1.id);\n            const docSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.getDoc)(docRef);\n            if (docSnap.exists()) {\n                var _userData_likedQuestions;\n                const userData = docSnap.data();\n                //Check if question is already liked and remove it from array\n                if (userData === null || userData === void 0 ? void 0 : (_userData_likedQuestions = userData.likedQuestions) === null || _userData_likedQuestions === void 0 ? void 0 : _userData_likedQuestions.includes(questionId)) {\n                    var _docSnap_data, _docSnap_data1;\n                    await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.updateDoc)(docRef, {\n                        likedQuestions: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.arrayRemove)(questionId)\n                    });\n                    setIsQuestionLiked(false);\n                    const questionRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_4__.db, \"questions\", questionId);\n                    const docSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.getDoc)(questionRef);\n                    if (docSnap.exists()) {\n                        var _docSnap_data2;\n                        if (((_docSnap_data2 = docSnap.data()) === null || _docSnap_data2 === void 0 ? void 0 : _docSnap_data2.numberOfLikes) === 0) {\n                            setLikeQuestionCount(0);\n                        } else {\n                            var _session_user2;\n                            const questionData = docSnap.data();\n                            const currentLikes = (questionData === null || questionData === void 0 ? void 0 : questionData.numberOfLikes) - 1;\n                            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.updateDoc)(questionRef, {\n                                numberOfLikes: currentLikes,\n                                likedBy: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.arrayRemove)(session === null || session === void 0 ? void 0 : (_session_user2 = session.user) === null || _session_user2 === void 0 ? void 0 : _session_user2.name)\n                            });\n                            setLikeQuestionCount(currentLikes);\n                            console.log(\"Question removed from array\");\n                        }\n                    }\n                    //Remove notification from author of question\n                    const docRefUser = (0,_lib_converters_User__WEBPACK_IMPORTED_MODULE_5__.userRef)((_docSnap_data = docSnap.data()) === null || _docSnap_data === void 0 ? void 0 : _docSnap_data.authorId);\n                    if (((_docSnap_data1 = docSnap.data()) === null || _docSnap_data1 === void 0 ? void 0 : _docSnap_data1.authorId) !== session.user.id) {\n                        var _docSnap_data3;\n                        await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.updateDoc)(docRefUser, {\n                            notifications: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.arrayRemove)({\n                                id: \"\".concat(questionId, \"-\").concat((_docSnap_data3 = docSnap.data()) === null || _docSnap_data3 === void 0 ? void 0 : _docSnap_data3.authorId, \"-\").concat(session.user.id),\n                                text: \"\".concat(session.user.name, \" liked your post - \").concat(question === null || question === void 0 ? void 0 : question.title),\n                                read: false\n                            })\n                        });\n                    }\n                } else {\n                    var _docSnap_data4, _docSnap_data5;\n                    await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.updateDoc)(docRef, {\n                        likedQuestions: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.arrayUnion)(questionId)\n                    });\n                    setIsQuestionLiked(true);\n                    const questionRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_4__.db, \"questions\", questionId);\n                    const docSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.getDoc)(questionRef);\n                    if (docSnap.exists()) {\n                        var _session_user3;\n                        const questionData = docSnap.data();\n                        const currentLikes = (questionData === null || questionData === void 0 ? void 0 : questionData.numberOfLikes) + 1;\n                        await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.updateDoc)(questionRef, {\n                            numberOfLikes: currentLikes,\n                            likedBy: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.arrayUnion)(session === null || session === void 0 ? void 0 : (_session_user3 = session.user) === null || _session_user3 === void 0 ? void 0 : _session_user3.name)\n                        });\n                        setLikeQuestionCount(currentLikes);\n                        console.log(\"Question added to array\");\n                    }\n                    //Add notification to author of question\n                    const docRefUser = (0,_lib_converters_User__WEBPACK_IMPORTED_MODULE_5__.userRef)((_docSnap_data4 = docSnap.data()) === null || _docSnap_data4 === void 0 ? void 0 : _docSnap_data4.authorId);\n                    if (((_docSnap_data5 = docSnap.data()) === null || _docSnap_data5 === void 0 ? void 0 : _docSnap_data5.authorId) !== session.user.id) {\n                        var _docSnap_data6;\n                        await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.updateDoc)(docRefUser, {\n                            notifications: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.arrayUnion)({\n                                id: \"\".concat(questionId, \"-\").concat((_docSnap_data6 = docSnap.data()) === null || _docSnap_data6 === void 0 ? void 0 : _docSnap_data6.authorId, \"-\").concat(session.user.id),\n                                text: \"\".concat(session.user.name, \" liked your post - \").concat(question === null || question === void 0 ? void 0 : question.title),\n                                read: false\n                            })\n                        });\n                    }\n                }\n            }\n        }\n    };\n    const handleCommentLikeCheck = async (commentId)=>{\n        var _session_user;\n        if (session === null || session === void 0 ? void 0 : (_session_user = session.user) === null || _session_user === void 0 ? void 0 : _session_user.id) {\n            const userDocRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_4__.db, \"users\", session.user.id);\n            const userDocSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.getDoc)(userDocRef);\n            if (userDocSnap.exists()) {\n                const userData = userDocSnap.data();\n                const commentRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_4__.db, \"comments\", commentId);\n                const commentDocSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.getDoc)(commentRef);\n                if (commentDocSnap.exists()) {\n                    var _commentDocSnap_data, _userData_likedComments, _userData_likedComments1;\n                    if (((_commentDocSnap_data = commentDocSnap.data()) === null || _commentDocSnap_data === void 0 ? void 0 : _commentDocSnap_data.numberOfLikes) === 0) {\n                        setLikeCommentCount(0);\n                    }\n                    const commentData = commentDocSnap.data();\n                    let currentLikes = commentData.numberOfLikes;\n                    if ((_userData_likedComments = userData.likedComments) === null || _userData_likedComments === void 0 ? void 0 : _userData_likedComments.includes(commentId)) {\n                        // If comment is already liked, unlike it\n                        await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.updateDoc)(userDocRef, {\n                            likedComments: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.arrayRemove)(commentId)\n                        });\n                        setIsCommentLiked(false);\n                        currentLikes--;\n                        //Remove notification from author of comment\n                        const docRefUser = (0,_lib_converters_User__WEBPACK_IMPORTED_MODULE_5__.userRef)(commentData.authorId);\n                        if (commentData.authorId !== session.user.id) {\n                            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.updateDoc)(docRefUser, {\n                                notifications: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.arrayRemove)({\n                                    id: \"\".concat(commentId, \"-\").concat(commentData.authorId, \"-\").concat(session.user.id),\n                                    text: \"\".concat(session.user.name, \" liked your comment\"),\n                                    read: false\n                                })\n                            });\n                        }\n                    } else {\n                        // If comment is not liked, like it\n                        await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.updateDoc)(userDocRef, {\n                            likedComments: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.arrayUnion)(commentId)\n                        });\n                        setIsCommentLiked(true);\n                        currentLikes++;\n                        //Add notification to author of comment\n                        const docRefUser = (0,_lib_converters_User__WEBPACK_IMPORTED_MODULE_5__.userRef)(commentData.authorId);\n                        if (commentData.authorId !== session.user.id) {\n                            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.updateDoc)(docRefUser, {\n                                notifications: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.arrayUnion)({\n                                    id: \"\".concat(commentId, \"-\").concat(commentData.authorId, \"-\").concat(session.user.id),\n                                    text: \"\".concat(session.user.name, \" liked your comment\"),\n                                    read: false\n                                })\n                            });\n                        }\n                    }\n                    // Update the comment's like count in Firestore\n                    await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.updateDoc)(commentRef, {\n                        numberOfLikes: currentLikes,\n                        likedBy: ((_userData_likedComments1 = userData.likedComments) === null || _userData_likedComments1 === void 0 ? void 0 : _userData_likedComments1.includes(commentId)) ? (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.arrayRemove)(session.user.name) : (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.arrayUnion)(session.user.name)\n                    });\n                    // Update local state to reflect the new like count\n                    setLikeCommentCount(currentLikes);\n                }\n            }\n        }\n    };\n    return {\n        checkIfQuestionLiked,\n        checkIfCommentLiked,\n        handleQuestionLikeCheck,\n        handleCommentLikeCheck,\n        isQuestionLiked,\n        isCommentLiked,\n        setIsCommentLiked\n    };\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (useCheckLikes);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/useCheckLikes.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./hooks/useCreateComment.ts":
/*!***********************************!*\
  !*** ./hooks/useCreateComment.ts ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth/react */ \"(app-pages-browser)/./node_modules/next-auth/react/index.js\");\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_auth_react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! firebase/firestore */ \"(app-pages-browser)/./node_modules/firebase/firestore/dist/esm/index.esm.js\");\n/* harmony import */ var _firebase__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/firebase */ \"(app-pages-browser)/./firebase.ts\");\n/* harmony import */ var _lib_converters_Questions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/converters/Questions */ \"(app-pages-browser)/./lib/converters/Questions.tsx\");\n/* harmony import */ var _lib_converters_Comments__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/lib/converters/Comments */ \"(app-pages-browser)/./lib/converters/Comments.tsx\");\n/* harmony import */ var _store_store__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/store/store */ \"(app-pages-browser)/./store/store.ts\");\n/* harmony import */ var _lib_converters_User__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/lib/converters/User */ \"(app-pages-browser)/./lib/converters/User.ts\");\n\n\n\n\n\n\n\n\nconst useCreateAndDeleteComment = ()=>{\n    const { data: session } = (0,next_auth_react__WEBPACK_IMPORTED_MODULE_1__.useSession)();\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const setCommentCount = (0,_store_store__WEBPACK_IMPORTED_MODULE_6__.useCommentCountStore)((state)=>state.setCommentCount);\n    const onCreateComment = async (commentText, question, setCommentText, commenterIdentity)=>{\n        var _session_user;\n        setLoading(true);\n        if (!(session === null || session === void 0 ? void 0 : (_session_user = session.user) === null || _session_user === void 0 ? void 0 : _session_user.id) || !commentText) return;\n        const randomNumber = Math.floor(Math.random() * 10000);\n        const commentId = (session === null || session === void 0 ? void 0 : session.user.id) + \"-\" + question.id + \"-\" + randomNumber;\n        const newComment = {\n            id: commentId,\n            commentId: commentId,\n            authorId: session.user.id,\n            author: session.user.name,\n            commenterIdentity: commenterIdentity === \"Name\" ? session.user.name : \"Anonymous\",\n            questionId: question.id,\n            questionTitle: question.title,\n            text: commentText,\n            createdAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.serverTimestamp)(),\n            numberOfLikes: 0,\n            likedBy: []\n        };\n        try {\n            const docRef = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.addDoc)(_lib_converters_Comments__WEBPACK_IMPORTED_MODULE_5__.commentRef, newComment);\n            console.log(\"Comment created successfully with ID:\", docRef.id);\n        } catch (error) {\n            console.error(\"Error creating post:\", error);\n        }\n        const docRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.doc)(_lib_converters_Questions__WEBPACK_IMPORTED_MODULE_4__.questionRef, question.id);\n        const docSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.getDoc)(docRef);\n        if (docSnap.exists()) {\n            const currentComments = docSnap.data().numberOfComments + 1;\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.updateDoc)(docRef, {\n                numberOfComments: currentComments,\n                comments: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.arrayUnion)(commentId),\n                commentedBy: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.arrayUnion)(commenterIdentity === \"Name\" ? session.user.name : \"Anonymous\")\n            });\n            setCommentCount(currentComments);\n        }\n        //Add notification to author of question\n        const docRefUser = (0,_lib_converters_User__WEBPACK_IMPORTED_MODULE_7__.userRef)(question.authorId);\n        if (question.authorId !== session.user.id) {\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.updateDoc)(docRefUser, {\n                notifications: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.arrayUnion)({\n                    id: \"\".concat(commentId, \"-\").concat(question.id, \"-\").concat(question.authorId),\n                    text: \"\".concat(commenterIdentity === \"Name\" ? session.user.name : \"Anonymous\", \" commented on your post - \").concat(question.title),\n                    read: false\n                })\n            });\n        }\n        setLoading(false);\n        setCommentText(\"\");\n    };\n    const onDeleteComment = async (comment)=>{\n        var _session_user;\n        if (session === null || session === void 0 ? void 0 : (_session_user = session.user) === null || _session_user === void 0 ? void 0 : _session_user.id) {\n            try {\n                const commentDocRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_3__.db, \"comments\", comment.id);\n                await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.deleteDoc)(commentDocRef);\n                console.log(\"Comment deleted successfully\");\n            } catch (error) {\n                console.error(\"Error deleting comment:\", error);\n            }\n            const docRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.doc)(_lib_converters_Questions__WEBPACK_IMPORTED_MODULE_4__.questionRef, comment.questionId);\n            const docSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.getDoc)(docRef);\n            if (docSnap.exists()) {\n                if (docSnap.data().numberOfComments === 0) {\n                    setCommentCount(0);\n                } else {\n                    const currentComments = docSnap.data().numberOfComments - 1;\n                    await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.updateDoc)(docRef, {\n                        numberOfComments: currentComments,\n                        comments: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.arrayRemove)(comment.commentId),\n                        commentedBy: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.arrayRemove)(comment.commenterIdentity)\n                    });\n                    setCommentCount(currentComments);\n                }\n                //Remove notification from author of question\n                const docRefUser = (0,_lib_converters_User__WEBPACK_IMPORTED_MODULE_7__.userRef)(docSnap.data().authorId);\n                if (docSnap.data().authorId !== session.user.id) {\n                    await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.updateDoc)(docRefUser, {\n                        notifications: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.arrayRemove)({\n                            id: \"\".concat(comment.commentId, \"-\").concat(comment.questionId, \"-\").concat(docSnap.data().authorId),\n                            text: \"\".concat(comment.commenterIdentity, \" commented on your post - \").concat(comment.questionTitle),\n                            read: false\n                        })\n                    });\n                }\n            }\n        }\n    };\n    return {\n        onCreateComment,\n        onDeleteComment,\n        loading\n    };\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (useCreateAndDeleteComment);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/useCreateComment.ts\n"));

/***/ })

});